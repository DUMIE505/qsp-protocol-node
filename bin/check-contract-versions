#!/bin/bash

####################################################################################################
#                                                                                                  #
# (c) 2019 Quantstamp, Inc. This content and its use are governed by the license terms at          #
# <https://s3.amazonaws.com/qsp-protocol-license/V2_LICENSE.txt>                                   #
#                                                                                                  #
####################################################################################################


set -e

readonly SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
readonly QSP_HOME=`dirname "$SCRIPT_DIR"`

function get_contract() {
    echo "Downloading $2 contract from s3 for $1..."
    curl "https://qsp-protocol-contract.s3.amazonaws.com/$1/$2" --output "$3" > /dev/null
}

readonly AUDIT_FILENAME="QuantstampAudit-v-2-meta.json"
readonly DEST_DIR="/tmp"

VALID=true
echo "Checking contract versions..."

for TARGET in $(ls "$QSP_HOME/resources/contracts"); do 
    if ! [ -f "$QSP_HOME/resources/contracts/$TARGET/$AUDIT_FILENAME" ]; then
        echo "Contract file missing: $QSP_HOME/resources/contracts/$TARGET/$AUDIT_FILENAME"
        VALID=false
        continue
    fi

    LOCAL_HASH=$(jq -S .commitHash "$QSP_HOME/resources/contracts/$TARGET/$AUDIT_FILENAME")
    get_contract "$TARGET" "$AUDIT_FILENAME" "$DEST_DIR/$AUDIT_FILENAME"
    S3_HASH=$(jq -S .commitHash "$DEST_DIR/$AUDIT_FILENAME")

    if [[ "x$S3_HASH" == "x" && "x$LOCAL_HASH" == "x"  ]] ; then
	echo "Unexpected error: hashes are empty"

    elif [[ "$S3_HASH" == "$LOCAL_HASH" ]] ; then
        echo "Contracts match for $TARGET network"

    else
        echo "Contracts do not match for $TARGET network"
        VALID=false
    fi
    rm "$DEST_DIR/$AUDIT_FILENAME"
done

if ! $VALID; then
    exit 1
fi
