#!/bin/bash

####################################################################################################
#                                                                                                  #
# (c) 2019 Quantstamp, Inc. This content and its use are governed by the license terms at          #
# <https://s3.amazonaws.com/qsp-protocol-license/V2_LICENSE.txt>                                   #
#                                                                                                  #
####################################################################################################


set -e

function get_contract() {
    echo "Downloading $2 contract from s3 for $1..."
    aws s3 cp s3://qsp-protocol-contract/$1/$2 $3 > /dev/null
}

readonly AUDIT_FILENAME="QuantstampAudit-v-2-meta.json"
readonly SCRIPT_DIR=`dirname $(realpath "$0")`
readonly DEST_DIR="/tmp"
readonly QSP_ROOT=`dirname "$SCRIPT_DIR"`

VALID=true
echo "Checking contract versions..."

for i in $(ls "$QSP_ROOT/resources/contracts"); do 
    if ! [ -f "$QSP_ROOT/resources/contracts/$i/$AUDIT_FILENAME" ]; then
        echo "Contract file missing: $QSP_ROOT/resources/contracts/$i/$AUDIT_FILENAME"
        VALID=false
        continue
    fi

    LOCAL_HASH=$(jq -S .commitHash "$QSP_ROOT/resources/contracts/$i/$AUDIT_FILENAME")
    get_contract $i "$AUDIT_FILENAME $DEST_DIR/$AUDIT_FILENAME"
    S3_HASH=$(jq -S .commitHash "$DEST_DIR/$AUDIT_FILENAME")

    if [[ "x$S3_HASH" == "x" && "x$LOCAL_HASH" == "x"  ]] ; then
	echo "Unexpected error: hashes are empty"

    elif [[ "$S3_HASH" == "$LOCAL_HASH" ]] ; then
        echo "Contracts match for $i network"

    else
        echo "Contracts do not match for $i network"
        VALID=false
    fi
    rm "$DEST_DIR/$AUDIT_FILENAME"
done

if ! $VALID; then
    exit 1
fi
