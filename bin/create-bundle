#!/bin/bash

set -e
VERSION=`PYTHONPATH=:./src/qsp_protocol_node python -c "from config import Config; c = Config(); print(c.node_version)"`

readonly ZIP_FILENAME="qsp-protocol-v$VERSION.zip"
readonly SCRIPT_DIR=`dirname $(realpath "$0")`

QSPROOT=`dirname "$SCRIPT_DIR"`
cd `echo $QSPROOT`

make clean build

readonly DIST_DIR="$QSPROOT/deployment/local/dist"
readonly CONFIG_FILE="$QSPROOT/resources/config.yaml"
readonly CONTRACTS_DIR="$QSPROOT/resources/contracts"
readonly START_SCRIPT="$SCRIPT_DIR/start-node"
readonly APP_TAR="$DIST_DIR/resources/app.tar"
readonly START_SCRIPT_NAME=`basename "$START_SCRIPT"`
readonly CONFIG_FILE_NAME=`basename "$CONFIG_FILE"`

mkdir -p "$DIST_DIR/resources" "$DIST_DIR/bin"
docker save -o "$APP_TAR" qsp-protocol-node:latest

echo "Switched to: `pwd`"
if [ ! -f "$CONFIG_FILE" ] && [ ! -f "$SCRIPT_DIR/start-node" ] && [ ! -f "$APP_TAR" ]; then
        echo "Bundle creation requires both config.yaml and start-node, but either one or both are missing"
        exit 1
fi

cat "$CONFIG_FILE" | sed -n '/mainnet/,$p' > "$DIST_DIR/resources/$CONFIG_FILE_NAME"
cat "$START_SCRIPT" | sed 's/testnet/mainnet/g' > "$DIST_DIR/bin/$START_SCRIPT_NAME"

cp LICENSE "$DIST_DIR"
cp "$SCRIPT_DIR/stop-node" "$SCRIPT_DIR/common" "$DIST_DIR/bin"
cp -a "$CONTRACTS_DIR/." "$DIST_DIR/resources/contracts"
mkdir -p "$DIST_DIR/resources/keystore"
echo "Add a valid key here" > "$DIST_DIR/resources/keystore/default.json"

cd "$DIST_DIR"
zip -r "$ZIP_FILENAME" *

rm -rf "resources"
rm -rf "bin"
rm -rf "LICENSE"
