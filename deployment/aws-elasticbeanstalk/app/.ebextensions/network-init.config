files:
  "/var/geth-config/audit-fullnode.toml":
    mode: "000755"
    owner: root
    group: root
    content: |
      [Node]
      UserIdent = "`{"Fn::GetOptionSetting": {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "NODE_NAME", "DefaultValue": ""}}`-{{instance_id}}"
      DataDir = "data"
      IPCPath = "geth.ipc"
      HTTPHost = "0.0.0.0"
      HTTPPort = 8545
      HTTPCors = ["*"]
      HTTPModules = ["db", "personal", "eth", "net", "web3"]

      [Ethstats]
      URL = "`{"Fn::GetOptionSetting": {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "NODE_NAME", "DefaultValue": ""}}`-{{instance_id}}:`{"Fn::GetOptionSetting": {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "WS_SECRET", "DefaultValue": ""}}`@`{"Fn::GetOptionSetting": {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "WS_ENDPOINT", "DefaultValue": ""}}`:443"

container_commands:
  "00-substitute-instance-id":
    command: |
      instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
      sed -i -e "s/{{instance_id}}/$instance_id/g" /var/geth-config/audit-fullnode.toml

  "01-init-node-key":
    command: |
      # This initialization step is important, because unless file exists,
      # Docker creates a folder, not a file, when mounting
      if [ ! -f "/var/node.key" ]; then
        touch /var/node.key
      fi
