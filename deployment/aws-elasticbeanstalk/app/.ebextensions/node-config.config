####################################################################################################
#                                                                                                  #
# (c) 2018 Quantstamp, Inc. All rights reserved.  This content shall not be used, copied,          #
# modified, redistributed, or otherwise disseminated except to the extent expressly authorized by  #
# Quantstamp for credentialed users. This content and its use are governed by the Quantstamp       #
# Demonstration License Terms at <https://s3.amazonaws.com/qsp-protocol-license/LICENSE.txt>.      #
#                                                                                                  #
####################################################################################################

files:
  "/var/node-config/config.yaml":
    mode: "000755"
    owner: root
    group: root
    content: |
      dev-feature:
        eth_node:
          provider: !!str "HTTPProvider"
          args:
            endpoint_uri: !!str "https://ropsten.infura.io/v3/${token}"
        audit_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAudit-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAudit-v-{major-version}-meta.json"
        min_price_in_qsp: !!int 1
        max_assigned_requests: !!int 5
        evt_polling_sec: !!int 5
        block_mined_polling_interval_sec: !!int 1
        block_discard_on_restart: !!int 1
        analyzers:
          - oyente:
              args: "-ce"
              storage_dir: /tmp/oyente
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - mythril:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/mythril
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - securify:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/securify
              timeout_sec: 276
        upload_provider:
            is_enabled: True
            name: !!str "S3Provider"
            args:
              bucket_name: "qsp-protocol-reports-dev-feature"
              contract_bucket_name: "qsp-protocol-reports-dev-feature"
        keystore_file: !!str "./keystore/keystore.json"
        gas: !!int 700000
        gas_price:
          # Can be set to either dynamic (compute average gas price of recent blocks) or static (fixed gas price)
          strategy: !!str "dynamic"
          # Only used if gas_strategy is set to "static"
          default_gas_price_wei: !!int 8000000000
          # Sets an upper bound on gas_price which would override high values computed by the strategy.
          # Useful in case the network gets "gas attacked".
          max_gas_price_wei: !!int 50000000000
        evt_db_path: "/app/audit-db/audit_node.db"
        submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
        logging:
          streaming:
            provider: !!str "CloudWatchProvider"
            args:
              log_group: "qsp-protocol-nodes-dev"
              log_stream: "node-{id}"
              send_interval_seconds: 30
        metric_collection:
          is_enabled: True
          interval_seconds: 30
          destination_endpoint: !!str "https://dev-qsp-dashboard.quantstamp.com/node-metrics"
        heartbeat_allowed: False
        n_blocks_confirmation: !!int 6
      dev:
        eth_node:
          provider: !!str "HTTPProvider"
          args:
            endpoint_uri: !!str "https://ropsten.infura.io/v3/${token}"
        audit_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAudit-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAudit-v-{major-version}-meta.json"
        min_price_in_qsp: !!int 1
        max_assigned_requests: !!int 5
        evt_polling_sec: !!int 5
        block_mined_polling_interval_sec: !!int 1
        block_discard_on_restart: !!int 1
        analyzers:
          - mythril:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/mythril
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - securify:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/securify
              timeout_sec: 276
        upload_provider:
            is_enabled: True
            name: !!str "S3Provider"
            args:
              bucket_name: "qsp-protocol-reports-dev"
              contract_bucket_name: "qsp-protocol-reports-dev"
        keystore_file: !!str "./keystore/keystore.json"
        gas: !!int 700000
        gas_price:
          # Can be set to either dynamic (compute average gas price of recent blocks) or static (fixed gas price)
          strategy: !!str "dynamic"
          # Only used if gas_strategy is set to "static"
          default_gas_price_wei: !!int 8000000000
          # Sets an upper bound on gas_price which would override high values computed by the strategy.
          # Useful in case the network gets "gas attacked".
          max_gas_price_wei: !!int 50000000000
        evt_db_path: "/app/audit-db/audit_node.db"
        submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
        logging:
          streaming:
            provider: !!str "CloudWatchProvider"
            args:
              log_group: "qsp-protocol-nodes-dev"
              log_stream: "node-{id}"
              send_interval_seconds: 30
        metric_collection:
          is_enabled: True
          interval_seconds: 5
          destination_endpoint: !!str "https://betanet-ui-2-staging.herokuapp.com/node-metrics"
        heartbeat_allowed: False
        n_blocks_confirmation: !!int 6
      testnet:
        eth_node:
          provider: !!str "HTTPProvider"
          args:
            endpoint_uri: !!str "https://ropsten.infura.io/v3/${token}"
        audit_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/testnet/QuantstampAudit-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/testnet/QuantstampAudit-v-{major-version}-meta.json"
        min_price_in_qsp: !!int 1
        max_assigned_requests: !!int 5
        evt_polling_sec: !!int 5
        block_mined_polling_interval_sec: !!int 1
        block_discard_on_restart: !!int 1
        analyzers:
          - mythril:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/mythril
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - securify:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/securify
              timeout_sec: 276
        upload_provider:
            is_enabled: True
            name: !!str "S3Provider"
            args:
              bucket_name: "qsp-protocol-reports-testnet"
              contract_bucket_name: "qsp-protocol-reports-testnet"
        keystore_file: !!str "./keystore/keystore.json"
        gas: !!int 700000
        gas_price:
          # Can be set to either dynamic (compute average gas price of recent blocks) or static (fixed gas price)
          strategy: !!str "dynamic"
          # Only used if gas_strategy is set to "static"
          default_gas_price_wei: !!int 8000000000
          # Sets an upper bound on gas_price which would override high values computed by the strategy.
          # Useful in case the network gets "gas attacked".
          max_gas_price_wei: !!int 50000000000
        evt_db_path: "/app/audit-db/audit_node.db"
        submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
        logging:
          streaming:
            provider: !!str "CloudWatchProvider"
            args:
              log_group: "qsp-protocol-nodes-testnet"
              log_stream: "node-{id}"
              send_interval_seconds: 30
        metric_collection:
          is_enabled: True
          interval_seconds: 5
          destination_endpoint: !!str "https://betanet-ui-2-staging.herokuapp.com/node-metrics"
        heartbeat_allowed: False
        n_blocks_confirmation: !!int 6
      prod:
        eth_node:
          provider: !!str "HTTPProvider"
          args:
            endpoint_uri: !!str "https://mainnet.infura.io/v3/${token}"
        audit_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAudit-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAudit-v-{major-version}-meta.json"
        min_price_in_qsp: !!int 1000
        max_assigned_requests: !!int 5
        evt_polling_sec: !!int 5
        block_mined_polling_interval_sec: !!int 1
        block_discard_on_restart: !!int 1
        analyzers:
          - mythril:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/mythril
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - securify:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/securify
              timeout_sec: 276
        upload_provider:
            is_enabled: True
            name: !!str "S3Provider"
            args:
              bucket_name: "qsp-protocol-reports-prod"
              contract_bucket_name: "qsp-protocol-reports-prod"
        keystore_file: !!str "./keystore/keystore.json"
        gas: !!int 700000
        gas_price:
          # Can be set to either dynamic (compute average gas price of recent blocks) or static (fixed gas price)
          strategy: !!str "dynamic"
          # Only used if gas_strategy is set to "static"
          default_gas_price_wei: !!int 8000000000
          # Sets an upper bound on gas_price which would override high values computed by the strategy.
          # Useful in case the network gets "gas attacked".
          max_gas_price_wei: !!int 50000000000
        evt_db_path: "/app/audit-db/audit_node.db"
        submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
        logging:
          streaming:
            provider: !!str "CloudWatchProvider"
            args:
              log_group: "qsp-protocol-nodes-prod"
              log_stream: "node-{id}"
              send_interval_seconds: 30
        metric_collection:
          is_enabled: True
          interval_seconds: 30
          destination_endpoint: !!str "https://qsp-dashboard.quantstamp.com/node-metrics"
        heartbeat_allowed: False
        n_blocks_confirmation: !!int 6
      staging:
        eth_node:
          provider: !!str "HTTPProvider"
          args:
            endpoint_uri: !!str "https://ropsten.infura.io/v3/${token}"
        audit_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/staging/QuantstampAudit-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/staging/QuantstampAudit-v-{major-version}-meta.json"
        min_price_in_qsp: !!int 10
        max_assigned_requests: !!int 5
        evt_polling_sec: !!int 5
        block_mined_polling_interval_sec: !!int 1
        block_discard_on_restart: !!int 1
        analyzers:
          - mythril:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/mythril
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - securify:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/securify
              timeout_sec: 276
        upload_provider:
            is_enabled: True
            name: !!str "S3Provider"
            args:
              bucket_name: "qsp-protocol-reports-staging"
              contract_bucket_name: "qsp-protocol-reports-staging"
        keystore_file: !!str "./keystore/keystore.json"
        gas: !!int 700000
        gas_price:
          # Can be set to either dynamic (compute average gas price of recent blocks) or static (fixed gas price)
          strategy: !!str "static"
          # Only used if gas_strategy is set to "static"
          default_gas_price_wei: !!int 8000000000
          # Sets an upper bound on gas_price which would override high values computed by the strategy.
          # Useful in case the network gets "gas attacked".
          max_gas_price_wei: !!int 50000000000
        evt_db_path: "/app/audit-db/audit_node.db"
        submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
        logging:
          streaming:
            provider: !!str "CloudWatchProvider"
            args:
              log_group: "qsp-protocol-nodes-staging"
              log_stream: "node-{id}"
              send_interval_seconds: 30
        metric_collection:
          is_enabled: True
          interval_seconds: 30
          destination_endpoint: None
        heartbeat_allowed: False
        n_blocks_confirmation: !!int 6
