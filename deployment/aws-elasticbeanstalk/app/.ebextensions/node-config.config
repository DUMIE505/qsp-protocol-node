files:
  "/var/node-config/config.yaml":
    mode: "000755"
    owner: root
    group: root
    content: |
      dev:
        eth_node:
          provider: !!str "HTTPProvider"
          args:
            endpoint_uri: !!str "https://prod.rpc.blockchaindevlabs.com/?token=${token}"
        audit_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAudit-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAudit-v-{major-version}-meta.json"
        audit_data_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAuditData-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAuditData-v-{major-version}-meta.json"
        min_price_in_qsp: !!int 1
        max_assigned_requests: !!int 5
        evt_polling_sec: !!int 5
        block_mined_polling_interval_sec: !!int 1
        block_discard_on_restart: !!int 1
        analyzers:
          - oyente:
              args: "-ce"
              storage_dir: /tmp/oyente
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - mythril:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/mythril
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
        report_uploader:
            provider: !!str "S3Provider"
            args:
              bucket_name: "qsp-protocol-reports-dev"
              contract_bucket_name: "qsp-protocol-reports-dev"
        account:
          id: !!str "0x9bf5e4620Db5944BCCf0A1E6a6b72A430c5A0126"
          keystore_file: !!str "./keystore/UTC--2018-07-12T00-58-35.172Z--9bf5e4620db5944bccf0a1e6a6b72a430c5a0126"
        gas: !!int 700000
        gas_price:
          # Can be set to either dynamic (compute average gas price of recent blocks) or static (fixed gas price)
          strategy: !!str "static"
          # Only used if gas_strategy is set to "static"
          default_gas_price_wei: !!int 8000000000
          # Sets an upper bound on gas_price which would override high values computed by the strategy.
          # Useful in case the network gets "gas attacked".
          max_gas_price_wei: !!int 50000000000
        evt_db_path: "/app/audit-db/audit_node.db"
        submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
        logging:
          is_verbose: True
          streaming:
            provider: !!str "CloudWatchProvider"
            args:
              log_group: "qsp-protocol-nodes-dev"
              log_stream: "node-{id}"
              send_interval_seconds: 30
        metric_collection:
          is_enabled: True
          interval_seconds: 30
      prod:
        eth_node:
          provider: !!str "HTTPProvider"
          args:
            endpoint_uri: !!str "https://dev.rpc.blockchaindevlabs.com/mainnet?token=${token}"
        audit_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAudit-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAudit-v-{major-version}-meta.json"
        audit_data_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAuditData-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAuditData-v-{major-version}-meta.json"
        min_price_in_qsp: !!int 10
        max_assigned_requests: !!int 5
        evt_polling_sec: !!int 5
        block_mined_polling_interval_sec: !!int 1
        block_discard_on_restart: !!int 1
        analyzers:
          - oyente:
              args: "-ce"
              storage_dir: /tmp/oyente
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - mythril:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/mythril
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
        report_uploader:
            provider: !!str "S3Provider"
            args:
              bucket_name: "qsp-protocol-reports-prod"
              contract_bucket_name: "qsp-protocol-reports-prod"
        account:
          id: !!str "0xe685187635499B823d97FFBf16CB0EE34a172c33"
          keystore_file: !!str "./keystore/mainnet-node-UTC--2018-08-13T14-30-46.517Z--e685187635499b823d97ffbf16cb0ee34a172c33"
        gas: !!int 700000
        gas_price:
          # Can be set to either dynamic (compute average gas price of recent blocks) or static (fixed gas price)
          strategy: !!str "static"
          # Only used if gas_strategy is set to "static"
          default_gas_price_wei: !!int 8000000000
          # Sets an upper bound on gas_price which would override high values computed by the strategy.
          # Useful in case the network gets "gas attacked".
          max_gas_price_wei: !!int 50000000000
        evt_db_path: "/app/audit-db/audit_node.db"
        submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
        logging:
          is_verbose: True
          streaming:
            provider: !!str "CloudWatchProvider"
            args:
              log_group: "qsp-protocol-nodes-prod"
              log_stream: "node-{id}"
              send_interval_seconds: 30
        metric_collection:
          is_enabled: True
          interval_seconds: 30
      staging:
        eth_node:
          provider: !!str "HTTPProvider"
          args:
            endpoint_uri: !!str "https://prod.rpc.blockchaindevlabs.com/?token=${token}"
        audit_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/staging/QuantstampAudit-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/staging/QuantstampAudit-v-{major-version}-meta.json"
        audit_data_contract_abi:
          uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/staging/QuantstampAuditData-v-{major-version}-abi.json"
          metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/staging/QuantstampAuditData-v-{major-version}-meta.json"
        min_price_in_qsp: !!int 10
        max_assigned_requests: !!int 5
        evt_polling_sec: !!int 5
        block_mined_polling_interval_sec: !!int 1
        block_discard_on_restart: !!int 1
        analyzers:
          - oyente:
              args: "-ce"
              storage_dir: /tmp/oyente
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
          - mythril:
              args: "" # No args provided; rely on defaults for now
              storage_dir: /tmp/mythril
              timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
        report_uploader:
            provider: !!str "S3Provider"
            args:
              bucket_name: "qsp-protocol-reports-staging"
              contract_bucket_name: "qsp-protocol-reports-staging"
        account:
          id: !!str "0xe685187635499B823d97FFBf16CB0EE34a172c33"
          keystore_file: !!str "./keystore/mainnet-node-UTC--2018-08-13T14-30-46.517Z--e685187635499b823d97ffbf16cb0ee34a172c33"
        gas: !!int 700000
        gas_price:
          # Can be set to either dynamic (compute average gas price of recent blocks) or static (fixed gas price)
          strategy: !!str "static"
          # Only used if gas_strategy is set to "static"
          default_gas_price_wei: !!int 8000000000
          # Sets an upper bound on gas_price which would override high values computed by the strategy.
          # Useful in case the network gets "gas attacked".
          max_gas_price_wei: !!int 50000000000
        evt_db_path: "/app/audit-db/audit_node.db"
        submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
        logging:
          is_verbose: True
          streaming:
            provider: !!str "CloudWatchProvider"
            args:
              log_group: "qsp-protocol-nodes-staging"
              log_stream: "node-{id}"
              send_interval_seconds: 30
        metric_collection:
          is_enabled: True
          interval_seconds: 30
