testnet:
  eth_node:
    provider: !!str "HTTPProvider"
    args:
      endpoint_uri: !!str "https://dev.rpc.blockchaindevlabs.com/?token=${token}"
  audit_contract_abi:
    uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAudit-v-{major-version}-abi.json"
    metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAudit-v-{major-version}-meta.json"
  audit_data_contract_abi:
    uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAuditData-v-{major-version}-abi.json"
    metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/dev/QuantstampAuditData-v-{major-version}-meta.json"
  min_price_in_qsp: !!int 0
  max_assigned_requests: !!int 5
  evt_polling_sec: !!int 5
  block_mined_polling_interval_sec: !!int 1
  block_discard_on_restart: !!int 1
  analyzers:
    - oyente:
        args: "-ce"
        storage_dir: /tmp/oyente
        timeout_sec: 276
    - mythril:
        args: "" # No args provided; rely on defaults for now
        storage_dir: /tmp/mythril
        timeout_sec: 276
  report_uploader:
      provider: !!str "S3Provider"
      args:
        bucket_name: "qsp-protocol-reports-dev"
        contract_bucket_name: "qsp-protocol-reports-dev"
  account:
    id: !!str "0x60463b7ee0c3d33def3a05313597b1300f6de62b" # replace with your account id
    # specify a path to a valid keystore file that can be decrypted using ETH_PASSPHRASE
    keystore_file: !!str "./keystore/default.json"
  default_gas: !!int 500000
  gas_price_wei: !!int 8000000000
  logging:
    is_verbose: True
    streaming:
      provider: !!str "CloudWatchProvider"
      args:
        log_group: "qsp-protocol-nodes-dev"
        log_stream: "node-{id}"
        send_interval_seconds: 30
  metric_collection:
    is_enabled: True
    interval_seconds: 30
mainnet:
  eth_node:
    provider: !!str "HTTPProvider"
    args:
      endpoint_uri: !!str "https://rpc.blockchaindevlabs.com/mainnet?token=${token}"
  audit_contract_abi:
    uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAudit-v-{major-version}-abi.json"
    metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAudit-v-{major-version}-meta.json"
  audit_data_contract_abi:
    uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAuditData-v-{major-version}-abi.json"
    metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract/prod/QuantstampAuditData-v-{major-version}-meta.json"
  min_price_in_qsp: !!int 0
  max_assigned_requests: !!int 5
  evt_polling_sec: !!int 5
  block_mined_polling_interval_sec: !!int 1
  block_discard_on_restart: !!int 1
  analyzers:
    - oyente:
        args: "-ce"
        storage_dir: /tmp/oyente
        timeout_sec: 276
    - mythril:
        args: "" # No args provided; rely on defaults for now
        storage_dir: /tmp/mythril
        timeout_sec: 276
  report_uploader:
      provider: !!str "S3Provider"
      args:
        bucket_name: "qsp-protocol-reports-prod"
        contract_bucket_name: "qsp-protocol-reports-prod"
  account:
    id: !!str "0x60463b7ee0c3d33def3a05313597b1300f6de62b" # replace with your account id
    # specify a path to a valid keystore file that can be decrypted using ETH_PASSPHRASE
    keystore_file: !!str "keystore/default.json"
  default_gas: !!int 500000
  gas_price_wei: !!int 8000000000
  logging:
    is_verbose: True
    streaming:
      provider: !!str "CloudWatchProvider"
      args:
        log_group: "qsp-protocol-nodes-prod"
        log_stream: "node-{id}"
        send_interval_seconds: 30
  metric_collection:
    is_enabled: True
    interval_seconds: 30
