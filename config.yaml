local:
  eth_node:
    provider: !!str "HTTPProvider"
    args:
      endpoint_uri: !!str "https://rpc.blockchaindevlabs.com/"
  audit_contract_abi:
    uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract-abi-dev/QuantstampAudit.abi.json"
    metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract-abi-dev/QuantstampAudit.meta.json"
  min_price: !!int 0
  max_assigned_requests: !!int 5
  evt_polling_sec: !!int 5
  block_mined_polling_interval_sec: !!int 1
  analyzers:
    - oyente:
        args: "-ce"
        storage_dir: /tmp/oyente
        timeout_sec: 120
    - mythril:
        args: "" # No args provided; rely on defaults for now
        storage_dir: /tmp/mythril
        timeout_sec: 120
  report_uploader:
      provider: !!str "S3Provider"
      args:
        bucket_name: "qsp-protocol-reports-dev"
  account:
    id: !!str "0x60463b7ee0c3d33def3a05313597b1300f6de62b" # replace with your account id
    # specify a path to a valid keystore file that can be decrypted using ETH_PASSPHRASE
    # keystore_file: !!str "./tests/resources/mykey.json"
  default_gas: !!int 500000
  gas_price_wei: !!int 8000000000
  logging:
    is_verbose: True
    streaming:
      provider: !!str "CloudWatchProvider"
      args:
        log_group: "qsp-protocol-nodes-dev"
        log_stream: "node-{id}"
        send_interval_seconds: 30
  metric_collection:
    is_enabled: True
    interval_seconds: 30

dev:
  eth_node:
    provider: !!str "HTTPProvider"
    args:
      endpoint_uri: !!str "https://rpc.blockchaindevlabs.com/"
  audit_contract_abi:
    uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract-abi-dev/QuantstampAudit.abi.json"
    metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract-abi-dev/QuantstampAudit.meta.json"
  min_price: !!int 0
  max_assigned_requests: !!int 5
  evt_polling_sec: !!int 5
  block_mined_polling_interval_sec: !!int 1
  analyzers:
    - oyente: 
        args: "-ce"
        storage_dir: /tmp/oyente
        timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
    - mythril:
        args: "" # No args provided; rely on defaults for now
        storage_dir: /tmp/mythril
        timeout_sec: 276 # (submission_timeout_limit_blocks-1) * 12
  report_uploader:
      provider: !!str "S3Provider"
      args:
        bucket_name: "qsp-protocol-reports-dev"
  account:
    id: !!str "0x9bf5e4620db5944bccf0a1e6a6b72a430c5a0126"
    keystore_file: !!str "/app/keystore/UTC--2018-07-12T00-58-35.172Z--9bf5e4620db5944bccf0a1e6a6b72a430c5a0126"
  default_gas: !!int 700000
  gas_price_wei: !!int 4000000000
  evt_db_path: "/app/audit-db/audit_node.db"
  submission_timeout_limit_blocks: 24 # QuantstampAudit.auditData.auditTimeoutInBlocks - 1
  logging:
    is_verbose: True
    streaming:
      provider: !!str "CloudWatchProvider"
      args:
        log_group: "qsp-protocol-nodes-dev"
        log_stream: "node-{id}"
        send_interval_seconds: 30
  metric_collection:
    is_enabled: True
    interval_seconds: 30

prod:
  eth_node:
    provider: !!str "HTTPProvider"
    args:
      # TODO This must be changed to point to a node relying on a secure
      # connection.
      endpoint_uri: !!str "http://geth:8545"
  audit_contract_abi:
    uri: !!str "https://s3.amazonaws.com/qsp-protocol-contract-abi-prod/QuantstampAudit.abi.json"
    metadata: !!str "https://s3.amazonaws.com/qsp-protocol-contract-abi-prod/QuantstampAudit.meta.json"
  min_price: !!int 0
  max_assigned_requests: !!int 5
  evt_polling_sec: !!int 5
  block_mined_polling_interval_sec: !!int 1
  analyzers:
    - oyente:
        args: "-ce"
    - mythril:
        args: "" # No args provided; rely on defaults for now
  report_uploader:
      provider: !!str "S3Provider"
      args:
        bucket_name: "qsp-protocol-reports-prod"
  account:
    ttl: 600
  default_gas: !!int 700000
  gas_price_wei: !!int 4000000000
  evt_db_path: "/app/audit-db/audit_node.db"
  submission_timeout_limit_blocks: 10
  logging:
    is_verbose: True
    streaming:
      provider: !!str "CloudWatchProvider"
      args:
        log_group: "qsp-protocol-nodes-prod"
        log_stream: "node-{id}"
        send_interval_seconds: 30
  metric_collection:
    is_enabled: True
    interval_seconds: 30
